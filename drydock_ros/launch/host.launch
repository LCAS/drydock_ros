<?xml version="1.0" ?>
<launch>
  <!-- the IP of the coordination_server rosbridge server -->
  <arg name="mqtt_bridge_ip" default="$(optenv MQTT_BRIDGE_IP 127.0.0.1)" />
  <arg name="mqtt_bridge_port" default="$(optenv MQTT_BRIDGE_PORT 5232)" />
  <arg name="launch_mosquitto" default="true" />
  <arg name="action_prefix" default="/scene_analyser" />
  <arg name="action_type" default="scene_analyser.msg:semantic_segmentationAction" />


  <!-- the control port for the dynamic server -->
  <arg name="control_topic" default="__drydock_dynamic_server" />

  <node if="$(arg launch_mosquitto)" 
        pkg="mqtt_bridge" name="mosquitto_server" type="mosquitto_server.sh" output="screen"
        args="$(arg mqtt_bridge_port)"/>

  <node pkg="mqtt_bridge" name="mqtt_bridge" type="mqtt_bridge_node.py" output="screen" respawn="true">
    <rosparam subst_value="True">
mqtt:
  client:
    protocol: 4      # MQTTv311
  connection:
    host: $(arg mqtt_bridge_ip)
    port: $(arg mqtt_bridge_port)
    keepalive: 60
# Default is json serialiser, msgpack is more efficient
serializer: msgpack:dumps
deserializer: msgpack:loads
bridge:
  # Dynamic Connection Server
  - factory: mqtt_bridge.bridge:DynamicBridgeServer
    control_topic: '$(arg control_topic)'
  ### OUTGOING from server
  # Status
  - factory: mqtt_bridge.bridge:RosToMqttBridge
    msg_type: 'actionlib_msgs.msg:GoalStatusArray'
    topic_from: '$(arg action_prefix)/status'
    topic_to: '$(arg action_prefix)/status'
    latched: false
    qos: 0
  # Result
  - factory: mqtt_bridge.bridge:RosToMqttBridge
    msg_type: '$(arg action_type)Result'
    topic_from: '$(arg action_prefix)/result'
    topic_to: '$(arg action_prefix)/result'
    latched: false
    qos: 2
  # Feedback
  - factory: mqtt_bridge.bridge:RosToMqttBridge
    msg_type: '$(arg action_type)Feedback'
    topic_from: '$(arg action_prefix)/feedback'
    topic_to: '$(arg action_prefix)/feedback'
    latched: false
    qos: 0
  ### INCOMING to server
  - factory: mqtt_bridge.bridge:MqttToRosBridge
    msg_type: '$(arg action_type)Goal'
    topic_from: '$(arg action_prefix)/goal'
    topic_to: '$(arg action_prefix)/goal'
    latched: false
    qos: 2
  - factory: mqtt_bridge.bridge:MqttToRosBridge
    msg_type: 'actionlib_msgs.msg:GoalID'
    topic_from: '$(arg action_prefix)/cancel'
    topic_to: '$(arg action_prefix)/cancel'
    latched: false
    qos: 2
    </rosparam>
  </node>
</launch>
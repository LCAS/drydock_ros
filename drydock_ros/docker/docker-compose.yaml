version: '3'


services:
  semantic_segmentation:
    build:
      context: ../..
      dockerfile: drydock_ros/docker/detectron2/melodic/Dockerfile
    restart: on-failure
    image: lcas.lincoln.ac.uk/lcas/fastpick_semantic_segmentation_server:melodic
    ipc: host
    volumes:
      - ./:/host
    ports:
      - 10000:6080
      - 10004:5232
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]    
  mqtt_client:
    build:
      context: ../..
      dockerfile: drydock_ros/docker/Dockerfile.test
    restart: on-failure
    image: lcas.lincoln.ac.uk/lcas/fastpick_semantic_segmentation_client:melodic
    ports:
      - 10002:6080
    environment:
      - "MQTT_BRIDGE_IP=semantic_segmentation"
      - "MQTT_BRIDGE_PORT=5232"
    volumes:
      - ./:/host
    depends_on:
      - "semantic_segmentation"
  johann_testing:
    image: semantic_segmentation_composed
    build:
      context: ../..
      dockerfile: scene_analyser/Dockerfile
    stdin_open: true # same as -i command line option in docker run
    tty: true        # same as -t command line option in docker run
    # depends_on:
    #   - "semantic_segmentation"
    restart: on-failure
    ipc: host
    #network_mode: "host"
    volumes:
      - ./:/host
    ports:
      - 10003:6080
      - 10001:5232
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]    
  local_testing:
    # for testing on your local computer with network_mode: "host". not for deployment.
    image: semantic_segmentation_composed
    build:
      context: ../..
      dockerfile: scene_analyser/Dockerfile
    stdin_open: true # same as -i command line option in docker run
    tty: true        # same as -t command line option in docker run
    # depends_on:
    #   - "semantic_segmentation"
    restart: on-failure
    network_mode: "host"
    volumes:
      - ./:/host
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]    
